/**
 * @file test_bessel_functions.cpp
 * @author remzerrr (remi.helleboid@gmail.com)
 * @brief
 * @version 0.1
 * @date 2022-09-16
 *
 * @copyright Copyright (c) 2022
 *
 */

#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN
#include <array>
#include <cmath>
#include <random>
#include <sstream>
#include <vector>

#include "bessel_func.hpp"
#include "doctest/doctest.h"

TEST_CASE("Test Generalized Bessel CYLINDRICAL function") {
    const std::vector<double> list_nu                = {-1.0, -0.5, 0.0, 0.5, 1.0, 2.0};
    const std::vector<double> list_x                 = {0.1, 0.2, 0.3, 0.4, 0.5, 1.0, 1.5, 2.0, 5.0, 10.0, 1000.0, 10000.0};
    std::vector<double>       nu_x_bessel_cyl_values = {
        -0.0499375, -0.0995008, -0.1483188, -0.1960266, -0.2422685, -0.4400506, -0.5579365, -0.5767248, 0.3275791,  -0.0434727, -0.0047283,
        -0.0036475, 2.5105274,  1.7485604,  1.3916685,  1.1619795,  0.9902459,  0.4310989,  0.0460832,  -0.2347857, 0.1012177,  -0.2117089,
        0.0141896,  -0.0075971, 0.9975016,  0.9900250,  0.9776262,  0.9603982,  0.9384698,  0.7651977,  0.5118277,  0.2238908,  -0.1775968,
        -0.2459358, 0.0247867,  -0.0070962, 0.2518929,  0.3544507,  0.4304935,  0.4912770,  0.5409738,  0.6713967,  0.6498381,  0.5130161,
        -0.3421680, -0.1372637, 0.0208633,  -0.0024385, 0.0499375,  0.0995008,  0.1483188,  0.1960266,  0.2422685,  0.4400506,  0.5579365,
        0.5767248,  -0.3275791, 0.0434727,  0.0047283,  0.0036475,  0.0012490,  0.0049834,  0.0111659,  0.0197347,  0.0306040,  0.1149035,
        0.2320877,  0.3528340,  0.0465651,  0.2546303,  -0.0247772, 0.0070969};
    for (size_t i = 0; i < list_nu.size(); i++) {
        for (size_t j = 0; j < list_x.size(); j++) {
            double nu = list_nu[i];
            double x  = list_x[j];
            double b  = generalized_bessel_cylindrical(nu, x);
            std::cout << "nu = " << nu << ", x = " << x << ", bessel(nu, x) = " << b << std::endl;
            CHECK(b == doctest::Approx(nu_x_bessel_cyl_values[i * list_x.size() + j]));
        }
    }
}

TEST_CASE("Test Generalized Bessel function") {
    const std::vector<double> list_nu            = {-1.0, -0.5, 0.0, 0.5, 1.0, 2.0};
    const std::vector<double> list_x             = {0.1, 0.2, 0.3, 0.4, 0.5, 1.0, 1.5, 2.0, 5.0, 10.0, 1000.0, 10000.0};
    std::vector<double>       nu_x_bessel_values = {
        9.950041653,  4.900332889, 3.184454964,  2.302652485,  1.755165124,  0.540302306,  0.047158134,  -0.208073418, 0.056732437,
        -0.083907153, 0.000562379, -0.000095216, 3.953425170,  2.774540637,  2.237031831,  1.903186254,  1.663394424,  0.959033078,
        0.523766926,  0.198418037, -0.099542834, -0.097472393, 0.000982377,  -0.000088937, 0.998334166,  0.993346654,  0.985067356,
        0.973545856,  0.958851077, 0.841470985,  0.664996658,  0.454648713,  -0.191784855, -0.054402111, 0.000826880,  -0.000030561,
        0.197918760,  0.278850646, 0.339387281,  0.388458744,  0.429409661,  0.551521620,  0.570951330,  0.511109053,  -0.183607819,
        0.017229672,  0.000187398, 0.000045714,  0.033300012,  0.066400381,  0.099102888,  0.131212154,  0.162537031,  0.301168679,
        0.396172971,  0.435397775, -0.095089408, 0.078466942,  -0.000561552, 0.000095212,  0.000666191,  0.002659056,  0.005961525,
        0.010545302,  0.016371107, 0.062035052,  0.127349284,  0.198447949,  0.134731210,  0.077942194,  -0.000828564, 0.000030590};
    for (size_t i = 0; i < list_nu.size(); i++) {
        for (size_t j = 0; j < list_x.size(); j++) {
            double nu = list_nu[i];
            double x  = list_x[j];
            double b  = generalized_bessel(nu, x);
            std::cout << "nu = " << nu << ", x = " << x << ", bessel(nu, x) = " << b << std::endl;
            CHECK(b == doctest::Approx(nu_x_bessel_values[i * list_x.size() + j]));
        }
    }
}
